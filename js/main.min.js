$(window).scroll(function() {
    if ($(window).scrollTop() > 100) {
        $(".scroll-up").addClass("scroll-up--active")
    } else {
        $(".scroll-up").removeClass("scroll-up--active")
    }
})

$(".scroll-up").click(function() {
    $(window).scrollTop(0);
})


$(".rating__item").click(function() {
    let ratingItem = parseInt($(this).attr("data-rating-value"))
    $(this).parent(".rating").attr("data-total-rating", ratingItem)
})


$(".tabs-block .tag").click(function() {
    let path = $(this).attr("data-tabs-path")
    let parents = $(this).parents(".tabs-block")
    $(".tag").removeClass("tag--active")
    $(this).addClass("tag--active")
    $(parents).find(".tag__content").removeClass("tag__content--active")
    $(parents).find(`.tag__content[data-tabs-path="${path}"]`).addClass("tag__content--active")
})

$(".hidden-p ._show-hidden-text").click(function() {
    $(this).parents(".hidden-p").toggleClass("show-p")
})

$("._add-like").click(function() {
    $(this).find(".like-num").html(+$(this).find(".like-num").html() + 1)
})

$("._show-detail").click(function() {
    $(this).toggleClass("_show-detail--active")
    $(this).parents(".schedule__item").next(".schedule__item2").slideToggle()
})
function mainSlider() {
    var swiper = new Swiper('.main .swiper-container', {
        slidesPerView: 1,
        spaceBetween: 0,
        effect: 'fade',
        fadeEffect: {
            crossFade: true
        },
        speed: 600,
        loop: true,
        autoplay: {
            delay: 3000
        },
        navigation: {
            nextEl: '.main .swiper-button-next',
            prevEl: '.main .swiper-button-prev',
        },
    })
}

function sitesSlider() {
    var swiper = new Swiper('.sites .swiper-container', {
        slidesPerView: "auto",
        spaceBetween: 0,
        breakpoints: {
            320: {
                spaceBetween: 50,
            },
            992: {
                spaceBetween: 95,
            },
        }
    })
}

let SlidersArray = []

function Sliders() {
    $(".slider").each(function(index, el) {
        $(el).attr("data-slider-id", `${index}`)
        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 30,
            // allowTouchMove: false,
            scrollbar: {
                el: `.slider[data-slider-id="${index}"] .swiper-scrollbar`,
                draggable: true,
            },
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            breakpoints: {
                320: {
                    spaceBetween: 10,
                },
                992: {
                    spaceBetween: 30,
                },
            },
            on: {
                init: function () {
                    if($(this.$el).parents(".slider").hasClass("works-slider")){
                        this.allowTouchMove = false
                    }
                },
            },
        })
    })
}

function socialSlider() {
    var swiper = new Swiper('.social .swiper-container', {
        slidesPerView: "auto",
        spaceBetween: 30,
        // centeredSlides: true,
        grid: {
            fill: 'row',
            rows: 2,
        },
        breakpoints: {
            320: {
                spaceBetween: 5,
            },
            576: {
                spaceBetween: 30,
            },
        },
    })
}

function eduGallery() {
    var swiper = new Swiper(".edu .mySwiper", {
        spaceBetween: 44,
        slidesPerView: "auto",
        freeMode: true,
        watchSlidesProgress: true,
        scrollbar: {
            el: `.edu .swiper-scrollbar`,
            draggable: true,
        },
    });
    var swiper2 = new Swiper(".edu .mySwiper2", {
        spaceBetween: 10,
        thumbs: {
            swiper: swiper,
        },
    });
}

mainSlider()
Sliders()
sitesSlider()
socialSlider()
eduGallery()

$(".menu__tab").click(function () {
    $(".menu__tab").removeClass("menu__tab--active")
    $(this).addClass("menu__tab--active")
    if(window.innerWidth<1100){
        $(this).siblings(".menu__content").slideToggle()
    }
})

$(".header__service-btn").click(function () {
    $(".header").addClass("_open-service")
})

if(window.innerWidth>1100) {
    $(document).mouseup(function (e) {
        var div = $('.menu');
        if (!div.is(e.target) && div.has(e.target).length === 0) {
            if ($(".header").hasClass("_open-service")) {
                $(".header").removeClass("_open-service")
            }
        }
    });
}

$(".header__burger").click(function () {
    $(".header").toggleClass("_open-burger")
    $("body").toggleClass("fixed-body")
})

$(".menu__back").click(function () {
    $(".header").removeClass("_open-service")
})

let originalTextArray = []
let cutTextArray = []
let textLimit = 436

$(".feedback-card__text").each(function (index, el){
    let text = $(el).html()
    $(el).attr("data-index",index)
    originalTextArray.push(text)
    cutTextArray.push(cutText(text))

    if(text.length > textLimit){
        setCutText(index)
        $(el).parents(".feedback-card__content").addClass("_cut-text")
    }

});


function cutText(originalText) {
    return originalText.slice(0, textLimit) + ".."
}

function setCutText(index) {
    $(`.feedback-card__text[data-index="${index}"]`).html(cutTextArray[index])
}

$(".feedback-card__more").click(function () {
    let textIndex = $(this).siblings(".feedback-card__text").attr("data-index")
    if($(this).hasClass("_active")){
        $(this).removeClass("_active")
        setCutText(textIndex)
    } else{
        $(this).addClass("_active")
        setFullText(textIndex)
    }
})

function setFullText(index) {
    $(`.feedback-card__text[data-index="${index}"]`).html(originalTextArray[index])
}

$(".video").click(function () {

    if ($(this).children("video").get(0).paused) {
        $(this).children("video").get(0).play();
        $(this).addClass("video--played")
        $(this).children("video").prop("controls", true);
    } else {
        $(this).children("video").get(0).pause();
        $(this).removeClass("video--played")
        $(this).children("video").removeAttr("controls")
        // $(this).children("video").prop("controls",false)
    }
})


$(".social-card__likes").click(function () {
    $(this).toggleClass("social-card__likes--active")
})

$("._file-upload input").change(function (e) {
    const [file] = e.target.files
    let fileName = file.name
    let fileContainer = $(this).parents(".files")
    $(fileContainer).prepend(
        `
        <div class="file">
            <span>${fileName}</span>
            <button type="button" class="file__delete">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9.46585 8.01314L15.6959 1.78287C16.1014 1.37762 16.1014 0.722377 15.6959 0.317124C15.2907 -0.0881297 14.6354 -0.0881297 14.2302 0.317124L7.99991 6.5474L1.76983 0.317124C1.36438 -0.0881297 0.709336 -0.0881297 0.304082 0.317124C-0.101361 0.722377 -0.101361 1.37762 0.304082 1.78287L6.53416 8.01314L0.304082 14.2434C-0.101361 14.6487 -0.101361 15.3039 0.304082 15.7092C0.506045 15.9113 0.771595 16.0129 1.03695 16.0129C1.30232 16.0129 1.56768 15.9113 1.76983 15.7092L7.99991 9.47889L14.2302 15.7092C14.4323 15.9113 14.6977 16.0129 14.9631 16.0129C15.2284 16.0129 15.4938 15.9113 15.6959 15.7092C16.1014 15.3039 16.1014 14.6487 15.6959 14.2434L9.46585 8.01314Z" fill="white"/>
                </svg>
            </button>
        </div>
        `
    )

    $(".file__delete").click(function () {
        let parent = $(this).parents(".files")
        clearFileInput(parent)
    })
})

$(".file__delete").click(function () {
    let parent = $(this).parents(".files")
    clearFileInput(parent)
})

function clearFileInput(parent) {
    $(parent).find(".file-input input").val('')
    $(parent).find(".file").remove()
}

// Call & init
$(document).ready(function(){
    $('.ba-slider').each(function(){
        var cur = $(this);
        // Adjust the slider
        var width = cur.width()+'px';
        cur.find('.resize img').css('width', width);
        // Bind dragging events
        drags(cur.find('.handle'), cur.find('.resize'), cur);
    });
});

// Update sliders on resize.
// Because we all do this: i.imgur.com/YkbaV.gif
$(window).resize(function(){
    $('.ba-slider').each(function(){
        var cur = $(this);
        var width = cur.width()+'px';
        cur.find('.resize img').css('width', width);
    });
});

function drags(dragElement, resizeElement, container) {

    // Initialize the dragging event on mousedown.
    dragElement.on('mousedown touchstart', function(e) {

        dragElement.addClass('draggable');
        resizeElement.addClass('resizable');

        // Check if it's a mouse or touch event and pass along the correct value
        var startX = (e.pageX) ? e.pageX : e.originalEvent.touches[0].pageX;

        // Get the initial position
        var dragWidth = dragElement.outerWidth(),
            posX = dragElement.offset().left + dragWidth - startX,
            containerOffset = container.offset().left,
            containerWidth = container.outerWidth();

        // Set limits
        minLeft = containerOffset + 10;
        maxLeft = containerOffset + containerWidth - dragWidth - 10;

        // Calculate the dragging distance on mousemove.
        dragElement.parents().on("mousemove touchmove", function(e) {

            // Check if it's a mouse or touch event and pass along the correct value
            var moveX = (e.pageX) ? e.pageX : e.originalEvent.touches[0].pageX;

            leftValue = moveX + posX - dragWidth;

            // Prevent going off limits
            if ( leftValue < minLeft) {
                leftValue = minLeft;
            } else if (leftValue > maxLeft) {
                leftValue = maxLeft;
            }

            // Translate the handle's left value to masked divs width.
            widthValue = (leftValue + dragWidth/2 - containerOffset)*100/containerWidth+'%';

            // Set the new values for the slider and the handle.
            // Bind mouseup events to stop dragging.
            $('.draggable').css('left', widthValue).on('mouseup touchend touchcancel', function () {
                $(this).removeClass('draggable');
                resizeElement.removeClass('resizable');
            });
            $('.resizable').css('width', widthValue);
        }).on('mouseup touchend touchcancel', function(){
            dragElement.removeClass('draggable');
            resizeElement.removeClass('resizable');
        });
        e.preventDefault();
    }).on('mouseup touchend touchcancel', function(e){
        dragElement.removeClass('draggable');
        resizeElement.removeClass('resizable');
    });
}



sliderAnimate()
$(window).scroll(function() {
    sliderAnimate()
});


function sliderAnimate() {
    $(".slider").each(function(index, el) {
        let wt = $(window).scrollTop();
        let wh = $(window).height();
        let et = $(el).offset().top;
        let eh = $(el).outerHeight();
        let dh = $(document).height();
        if (wt + wh >= et || wh + wt == dh || eh + et < wh) {
            $(el).addClass("animated")
        }
    });
    $(".tags, .anim").each(function(index, el) {
        let wt = $(window).scrollTop();
        let wh = $(window).height();
        let et = $(el).offset().top;
        let eh = $(el).outerHeight();
        let dh = $(document).height();
        if (wt + wh >= et || wh + wt == dh || eh + et < wh) {
            $(el).addClass("animated")
        }
    });
}

$(document).ready(function() {
    $('input[type="tel"]').mask('+7 999 999-9999', { autoclear: false }, { placeholder: '+7             ' });
});

if(localStorage.contrast === 'true') {
    $("html").addClass("_contrast")
} else{
    $("html").removeClass("_contrast")
}


$("._contrast-toggle").click(function () {
    if(localStorage.contrast === 'true'){
        setContrastData(false)
        $("html").removeClass("_contrast")
    } else{
        setContrastData(true)
        $("html").addClass("_contrast")
    }
})


function setContrastData(isContrast) {
    if(isContrast){
        localStorage.contrast = isContrast
    } else{
        localStorage.clear()
    }
}


$('input[name="who"]').change(function () {
    let val = $(this).val()
    $(".tax-form__inputs").removeClass("_active")
    $(`.tax-form__inputs[data-id="${val}"]`).addClass("_active")
})


$(".vacancies-card__btn").click(function (e) {
    e.stopPropagation()
})


$('input[name="how-get"]').change(function () {
    let val = $(this).val()
    $(".tax-form__inputs2").removeClass("_active")
    $(`.tax-form__inputs2[data-id="${val}"]`).addClass("_active")
})

//# sourceMappingURL=../sourcemaps/main.min.js.map
